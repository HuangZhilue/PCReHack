<UserControl
    x:Class="DeemoHack.Views.Test.OpenCV.InRangeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:DeemoHack.Views.Test.OpenCV"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:viewModels="clr-namespace:DeemoHack.ViewModels.Test.OpenCV"
    d:DataContext="{d:DesignInstance Type={x:Type viewModels:InRangeViewModel}}"
    d:Height="700"
    d:Width="800"
    Background="{DynamicResource RegionBrush}"
    Foreground="{DynamicResource PrimaryTextBrush}"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" MinHeight="350" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="*"
                    MinHeight="50"
                    MaxHeight="50" />
                <RowDefinition
                    Height="*"
                    MinHeight="50"
                    MaxHeight="50" />
                <RowDefinition
                    Height="*"
                    MinHeight="50"
                    MaxHeight="50" />
                <RowDefinition
                    Height="*"
                    MinHeight="50"
                    MaxHeight="50" />
                <RowDefinition
                    Height="*"
                    MinHeight="50"
                    MaxHeight="50" />
                <RowDefinition
                    Height="*"
                    MinHeight="50"
                    MaxHeight="50" />
                <RowDefinition
                    Height="*"
                    MinHeight="50"
                    MaxHeight="50" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="120"
                    MinWidth="120"
                    MaxWidth="120" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="5,0"
                HorizontalAlignment="Left"
                Command="{s:Action GetImage}"
                Content="Select Image" />
            <TextBlock
                Grid.Row="1"
                Grid.Column="0"
                Margin="10,0,0,0"
                VerticalAlignment="Center"
                FontSize="20"
                Text="Threshold" />
            <hc:PreviewSlider
                x:Name="previewSliderT"
                Grid.Row="1"
                Grid.Column="1"
                Height="36"
                Background="{DynamicResource LightInfoBrush}"
                Maximum="255"
                Minimum="0"
                Value="{Binding Threshold}">
                <hc:PreviewSlider.Style>
                    <Style BasedOn="{hc:StaticResource PreviewSliderBaseStyle}" TargetType="hc:PreviewSlider">
                        <Style.Resources>
                            <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource InfoColor}" />
                        </Style.Resources>
                    </Style>
                </hc:PreviewSlider.Style>
                <hc:PreviewSlider.PreviewContent>
                    <Label
                        Content="{Binding Path=(hc:PreviewSlider.PreviewPosition), RelativeSource={RelativeSource Self}}"
                        ContentStringFormat="#0"
                        Style="{StaticResource LabelInfo}" />
                </hc:PreviewSlider.PreviewContent>
                <b:Interaction.Triggers>
                    <b:PropertyChangedTrigger Binding="{Binding Value, ElementName=previewSliderT}">
                        <b:InvokeCommandAction Command="{s:Action ImageProcessing}" />
                    </b:PropertyChangedTrigger>
                </b:Interaction.Triggers>
            </hc:PreviewSlider>
            <TextBlock
                Grid.Row="2"
                Grid.Column="0"
                Margin="10,0,0,0"
                VerticalAlignment="Center"
                FontSize="20"
                Text="Binary" />
            <hc:PreviewSlider
                x:Name="previewSliderMB"
                Grid.Row="2"
                Grid.Column="1"
                Height="36"
                Background="{DynamicResource LightInfoBrush}"
                Maximum="255"
                Minimum="0"
                Value="{Binding MaxBinary}">
                <hc:PreviewSlider.Style>
                    <Style BasedOn="{hc:StaticResource PreviewSliderBaseStyle}" TargetType="hc:PreviewSlider">
                        <Style.Resources>
                            <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource InfoColor}" />
                        </Style.Resources>
                    </Style>
                </hc:PreviewSlider.Style>
                <hc:PreviewSlider.PreviewContent>
                    <Label
                        Content="{Binding Path=(hc:PreviewSlider.PreviewPosition), RelativeSource={RelativeSource Self}}"
                        ContentStringFormat="#0"
                        Style="{StaticResource LabelInfo}" />
                </hc:PreviewSlider.PreviewContent>
                <b:Interaction.Triggers>
                    <b:PropertyChangedTrigger Binding="{Binding Value, ElementName=previewSliderMB}">
                        <b:InvokeCommandAction Command="{s:Action ImageProcessing}" />
                    </b:PropertyChangedTrigger>
                </b:Interaction.Triggers>
            </hc:PreviewSlider>
            <StackPanel
                Grid.Row="3"
                Grid.ColumnSpan="2"
                Margin="10"
                Orientation="Horizontal">
                <TextBlock FontSize="20" Text="Threshold:" />
                <TextBlock
                    Margin="5,0"
                    d:Text="threshold"
                    FontSize="20"
                    Text="{Binding Value, ElementName=previewSliderT, StringFormat=\0}" />
                <TextBlock FontSize="20" Text="Binary:" />
                <TextBlock
                    Margin="5,0"
                    d:Text="binary"
                    FontSize="20"
                    Text="{Binding Value, ElementName=previewSliderMB, StringFormat=\0}" />
            </StackPanel>
            <StackPanel
                Grid.Row="4"
                Grid.ColumnSpan="2"
                Margin="10"
                Orientation="Horizontal">
                <Button Padding="0">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontSize="20" Text="HSV:" />
                            <TextBlock
                                Margin="5,0"
                                d:Text="Hxx"
                                FontSize="20"
                                Text="{Binding ColorState.HSV_H, StringFormat=0.00}" />
                            <TextBlock
                                Margin="5,0"
                                d:Text="Sxx"
                                FontSize="20"
                                Text="{Binding ColorState.HSV_S, StringFormat=0.00}" />
                            <TextBlock
                                Margin="5,0"
                                d:Text="Vxx"
                                FontSize="20"
                                Text="{Binding ColorState.HSV_V, StringFormat=0.00}" />
                        </StackPanel>
                    </Button.Content>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Click">
                            <b:ChangePropertyAction
                                PropertyName="Visibility"
                                TargetName="colorPickerGrid1"
                                Value="Visible" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>
            </StackPanel>

            <CheckBox
                x:Name="checkBox"
                Grid.Row="5"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="10"
                Content="Use InRange"
                IsChecked="{Binding UseInRange}" />
            <StackPanel
                Grid.Row="6"
                Grid.ColumnSpan="2"
                Margin="10"
                Orientation="Horizontal">
                <Button Padding="0" IsEnabled="{Binding ElementName=checkBox, Path=IsChecked}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontSize="20" Text="HSV:" />
                            <TextBlock
                                Margin="5,0"
                                d:Text="Hxx"
                                FontSize="20"
                                Text="{Binding ColorState2.HSV_H, StringFormat=0.00}" />
                            <TextBlock
                                Margin="5,0"
                                d:Text="Sxx"
                                FontSize="20"
                                Text="{Binding ColorState2.HSV_S, StringFormat=0.00}" />
                            <TextBlock
                                Margin="5,0"
                                d:Text="Vxx"
                                FontSize="20"
                                Text="{Binding ColorState2.HSV_V, StringFormat=0.00}" />
                        </StackPanel>
                    </Button.Content>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Click">
                            <b:ChangePropertyAction
                                PropertyName="Visibility"
                                TargetName="colorPickerGrid2"
                                Value="Visible" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </Button>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="0" Grid.Column="1">
            <Image
                MinWidth="100"
                MinHeight="100"
                Margin="10"
                Source="{Binding BitmapSource}"
                Stretch="Uniform" />
        </Grid>

        <Grid Grid.Row="1" Grid.Column="1">
            <Image
                MinWidth="100"
                MinHeight="100"
                Margin="10"
                Source="{Binding BitmapSource2}"
                Stretch="Uniform" />
        </Grid>

        <Grid
            x:Name="colorPickerGrid1"
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="0"
            d:Visibility="Hidden"
            Background="#66000000"
            Visibility="Hidden">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel>
                    <colorpicker:StandardColorPicker
                        Width="220"
                        Height="450"
                        Background="{DynamicResource RegionBrush}"
                        ColorState="{Binding ColorState, Mode=TwoWay}">
                        <colorpicker:StandardColorPicker.Style>
                            <Style TargetType="colorpicker:StandardColorPicker">
                                <Style.Resources>
                                    <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource InfoColor}" />
                                    <Style BasedOn="{hc:StaticResource ComboBox.Small}" TargetType="ComboBox">
                                        <Setter Property="Width" Value="80" />
                                        <Setter Property="FontSize" Value="10" />
                                    </Style>
                                    <Style BasedOn="{hc:StaticResource LabelBaseStyle}" TargetType="Label" />
                                    <Style BasedOn="{hc:StaticResource TextBox.Small}" TargetType="TextBox">
                                        <Setter Property="FontSize" Value="10" />
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </colorpicker:StandardColorPicker.Style>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="ColorChanged">
                                <b:InvokeCommandAction Command="{s:Action ImageProcessing}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </colorpicker:StandardColorPicker>
                    <Button Margin="10" Content="X">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction
                                    PropertyName="Visibility"
                                    TargetName="colorPickerGrid1"
                                    Value="Hidden" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
        <Grid
            x:Name="colorPickerGrid2"
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="0"
            d:Visibility="Hidden"
            Background="#66000000"
            Visibility="Hidden">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel>
                    <colorpicker:StandardColorPicker
                        Width="220"
                        Height="450"
                        Background="{DynamicResource RegionBrush}"
                        ColorState="{Binding ColorState2, Mode=TwoWay}">
                        <colorpicker:StandardColorPicker.Style>
                            <Style TargetType="colorpicker:StandardColorPicker">
                                <Style.Resources>
                                    <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource InfoColor}" />
                                    <Style BasedOn="{hc:StaticResource ComboBox.Small}" TargetType="ComboBox">
                                        <Setter Property="Width" Value="80" />
                                        <Setter Property="FontSize" Value="10" />
                                    </Style>
                                    <Style BasedOn="{hc:StaticResource LabelBaseStyle}" TargetType="Label" />
                                    <Style BasedOn="{hc:StaticResource TextBox.Small}" TargetType="TextBox">
                                        <Setter Property="FontSize" Value="10" />
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </colorpicker:StandardColorPicker.Style>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="ColorChanged">
                                <b:InvokeCommandAction Command="{s:Action ImageProcessing}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </colorpicker:StandardColorPicker>
                    <Button Margin="10" Content="X">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction
                                    PropertyName="Visibility"
                                    TargetName="colorPickerGrid2"
                                    Value="Hidden" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
